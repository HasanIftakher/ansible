---
# This playbook contains common plays that will be run on all nodes.

- name: Install chrony [Fedora distro]
  dnf: name=chrony state=present
  when: ansible_distribution == 'Fedora' and ansible_distribution_major_version|int >= 22
  tags: chrony

- name: Install chrony [RHEL distro]
  yum: name=chrony state=present
  when: ansible_distribution == 'RedHat' and ansible_distribution_major_version|int == 7
  tags: chrony

- name: Install RHEL software needed for the Base role
  yum: state=present name={{ item }}
  tags: software
  when: ansible_distribution == 'RedHat' and ansible_distribution_major_version|int == 7
  with_items:
  - wget
  - net-tools
  - bind-utils
  - bash-completion
  - gpm
  - deltarpm
  - sysstat
  - iotop
  - sos
  - insights-client
  - iperf3

- name: Install software needed for RHEV virtual machines
  yum: state=present name={{ item }}
  tags: software
  when:
   - ansible_virtualization_role is defined
   - ansible_distribution == 'RedHat' 
   - ansible_distribution_major_version|int == 7 
   - ansible_virtualization_role == 'guest'
   - ansible_virtualization_type == 'RHEV'
  with_items:
  - rhevm-guest-agent

- name: Start/enable software needed for RHEV virtual machines
  systemd:
   name: "{{ item }}"
   state: started
   enabled: yes
  when:
   - ansible_virtualization_role is defined
   - ansible_distribution == 'RedHat' 
   - ansible_distribution_major_version|int == 7 
   - ansible_virtualization_role == 'guest'
   - ansible_virtualization_type == 'RHEV'
  with_items:
   - 'ovirt-guest-agent'
  tags: software
  
- name: Configure chrony.conf file and restart
  template: src=chrony.conf.j2 dest=/etc/chrony.conf
  tags: chrony
  notify: restart chrony

- name: Enable chrony at boot
  service: name=chronyd state=started enabled=yes
  tags: chrony

- name: Update motd
  template: src=etc.motd dest=/etc/motd
  tags: motd

- name: Add --long-hostname to getty
  lineinfile: dest=/etc/systemd/system/getty.target.wants/getty@tty1.service regexp="^ExecStart=" line="ExecStart=-/sbin/agetty --long-hostname --noclear %I $TERM"  state=present
  tags: getty

- name: Remove annoying system beep
  template: src=nobeep.conf dest=/etc/modprobe.d/nobeep.conf
  tags: physical

- name: Add 'aludwar' admin user
  user:
    name: aludwar
    comment: Andrew Ludwar
    uid: 1000
    shell: /bin/bash
    password: $6$/xFdPAJvqAbyB/I7$KPqseBHmBZJ4qRW09hYnO8uX.GEyqga/3DaelNzTT0ZahpdAX2k/4hphXcz24lgID7VgGM1FZ1vnr7obAU09w1
  tags: user-setup

- name: Ensure /etc/sudoers.d/admins file exists
  copy:
    content: ""
    dest: /etc/sudoers.d/admins
    force: no
    group: sys
    owner: root
    mode: 0555
  tags: user-setup 

- name: Allow aludwar user to have passwordless sudo
  lineinfile:
    dest: /etc/sudoers.d/admins
    state: present
    line: 'aludwar ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'
  tags: user-setup 

- name: Unroll home directory - aludwar - Load/copy script
  template: src=set-aludwar.sh dest=/tmp/set-aludwar.sh mode="u+rwx"   
  tags: user-setup 

- name: Unroll home directory - aludwar -  Run script   
  command: bash /tmp/set-aludwar.sh   
  tags: user-setup

- name: Add 'ansible' user for authentication across the inventory
  user:
    name: ansible
    comment: Ansible User
    uid: 2000
    shell: /bin/bash
    generate_ssh_key: yes
    ssh_key_bits: 2048
    ssh_key_file: .ssh/id_rsa
    password: $6$tn2vIE9oCq.fjQ4r$tUKqkzanIl55aViCecXtOQaqbnKazTni4lDbkOAoSUYt6gjDSC4.XfjfJlHlC7939m88IuyRhCJJ3N7l5SKzD1
    state: present
  tags: user-setup

- name: Ensure /etc/sudoers.d/ansible file exists
  copy:
    content: ""
    dest: /etc/sudoers.d/ansible
    force: no
    group: sys
    owner: root
    mode: 0555

- name: Allow ansible user to have passwordless sudo
  lineinfile:
    dest: /etc/sudoers.d/ansible
    state: present
    line: 'ansible ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'


# Copy public SSH keys from all office servers
