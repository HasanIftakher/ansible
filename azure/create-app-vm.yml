---
- name: Create Linux Application VM in Azure
  # Host is local as the Azure module runs from the Ansible control node.
  hosts: localhost
  connection: local
  # No need to gather facts
  gather_facts: false
  vars:
    # Variables to create the Tower VM and App Server VM
    default_username: "ansible"
    default_password: "Password1!"
    vm1_name: "app2"
    vm1_ip_address: "10.0.0.20"
    vm_size: Standard_D2_v3
    res_group: "rgTowerCICD"
    res_group_location: canadacentral
    storage_class: Standard_LRS
    virtual_network_cidr: 10.0.0.0/24

    # Azure credentials stored in BASH environment variables. Query them and store for use
    azure_client_id: "{{ lookup('env', 'AZURE_CLIENT_ID') }}"
    azure_tenant: "{{ lookup('env', 'AZURE_TENANT') }}"
    azure_subscription_id: "{{ lookup('env', 'AZURE_SUBSCRIPTION_ID') }}"
    azure_secret: "{{ lookup('env', 'AZURE_SECRET') }}"

  pre_tasks:
    - name: Validate VM details are defined (user to verify if they are sane)
      assert:
        { that: "{{ item }} is defined" }
      with_items:
        - default_username
        - default_password
        - vm1_name
        - vm1_ip_address
        - vm_size

    - name: Do we have our AZURE Credentials
      assert:
        { that: "{{ item }} != ''" }
      with_items:
        - azure_client_id
        - azure_tenant
        - azure_subscription_id
        - azure_secret

  tasks:
    - name: Create resource group
      azure_rm_resourcegroup:
        client_id: "{{ azure_client_id }}"
        tenant: "{{ azure_tenant }}"
        subscription_id: "{{ azure_subscription_id }}"
        secret: "{{ azure_secret }}"
        name: "{{ res_group }}"
        location: "{{ res_group_location }}"

    - name: Create storage account
      azure_rm_storageaccount:
        client_id: "{{ azure_client_id }}"
        tenant: "{{ azure_tenant }}"
        subscription_id: "{{ azure_subscription_id }}"
        secret: "{{ azure_secret }}"
        resource_group: "{{ res_group }}"
        name: "sac{{ vm1_name }}"
        account_type: "{{ storage_class }}"

    - name: Create virtual network
      azure_rm_virtualnetwork:
        client_id: "{{ azure_client_id }}"
        tenant: "{{ azure_tenant }}"
        subscription_id: "{{ azure_subscription_id }}"
        secret: "{{ azure_secret }}"
        resource_group: "{{ res_group }}"
        name: "vn{{ vm1_name }}"
        address_prefixes: "{{ virtual_network_cidr }}"

    - name: Add subnet
      azure_rm_subnet:
        client_id: "{{ azure_client_id }}"
        tenant: "{{ azure_tenant }}"
        subscription_id: "{{ azure_subscription_id }}"
        secret: "{{ azure_secret }}"
        resource_group: "{{ res_group }}"
        name: "sn{{ vm1_name }}"
        address_prefix: "{{ virtual_network_cidr }}"
        virtual_network: "vn{{ vm1_name }}"

    - name: Create first public ip for Application VM
      azure_rm_publicipaddress:
        client_id: "{{ azure_client_id }}"
        tenant: "{{ azure_tenant }}"
        subscription_id: "{{ azure_subscription_id }}"
        secret: "{{ azure_secret }}"
        resource_group: "{{ res_group }}"
        allocation_method: Static
        name: "pbi01{{ vm1_name }}"

    - name: Create security group that allows incoming traffic on SSH/HTTP/HTTPS
      azure_rm_securitygroup:
        client_id: "{{ azure_client_id }}"
        tenant: "{{ azure_tenant }}"
        subscription_id: "{{ azure_subscription_id }}"
        secret: "{{ azure_secret }}"
        resource_group: "{{ res_group }}"
        name: "sg{{ vm1_name }}"
        rules:
          - name: SSH
            protocol: Tcp
            destination_port_range: 22
            access: Allow
            priority: 101
            direction: Inbound
          - name: HTTP
            protocol: Tcp
            destination_port_range: 80
            access: Allow
            priority: 103
            direction: Inbound
          - name: HTTPS
            protocol: Tcp
            destination_port_range: 443
            access: Allow
            priority: 104
            direction: Inbound
          - name: Custom
            protocol: Tcp
            destination_port_range: 8080
            access: Allow
            priority: 105
            direction: Inbound

    - name: Create NIC for Application VM
      azure_rm_networkinterface:
        client_id: "{{ azure_client_id }}"
        tenant: "{{ azure_tenant }}"
        subscription_id: "{{ azure_subscription_id }}"
        secret: "{{ azure_secret }}"
        resource_group: "{{ res_group }}"
        name: "nic01{{ vm1_name }}"
        virtual_network: "vn{{ vm1_name }}"
        subnet: "sn{{ vm1_name }}"
        ip_configurations:
        - name: "primary"
          public_ip_name: "pbi01{{ vm1_name }}"
          private_ip_address: "{{ vm1_ip_address }}"
          private_ip_allocation_method: "Static"
          primary: "yes"
        security_group: "sg{{ vm1_name }}"

    - name: Create Application VM
      azure_rm_virtualmachine:
        client_id: "{{ azure_client_id }}"
        tenant: "{{ azure_tenant }}"
        subscription_id: "{{ azure_subscription_id }}"
        secret: "{{ azure_secret }}"
        resource_group: "{{ res_group }}"
        name: "rhel{{ vm1_name }}"
        vm_size: "{{ vm_size }}"
        managed_disk_type: "{{ storage_class }}"
        storage_account: "sac{{ vm1_name }}"
        storage_container: "vms{{ vm1_name }}"
        storage_blob: "rhel{{ vm1_name }}.vhd"
        admin_username: "{{ default_username }}"
        admin_password: "{{ default_password }}"
        network_interfaces: "nic01{{ vm1_name }}"
        image:
          name: rhel8-golden-image-cdn.vhd
          resource_group: rgDefault
        ssh_public_keys:
          - path: /home/{{ default_username }}/.ssh/authorized_keys
            key_data: "{{ lookup('file', 'insecure.pub') }}"
      register: vm1_output
